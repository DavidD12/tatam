{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Tatam",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"begin": "/\\*\\*(?!/)",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.tatam"
						}
					},
					"end": "\\*/",
					"name": "comment.block.documentation.tatam"
				},
				{
					"begin": "/\\*",
					"captures": {
						"0": {
							"name": "punctuation.definition.comment.tatam"
						}
					},
					"end": "\\*/",
					"name": "comment.block.tatam"
				},
				{
					"captures": {
						"1": {
							"name": "punctuation.definition.comment.tatam"
						}
					},
					"match": "(//).*$\\n?",
					"name": "comment.line.double-slash.js"
				},
				{
					"match": "(enum)\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s*=",
					"captures": {
						"1": {
							"name": "keyword.other.tatam"
						},
						"2": {
							"name": "entity.name.type.tatam"
						}
					}
				},
				{
					"match": "(interval)\\s+([a-zA-Z][a-zA-Z_0-9]*)\\s*=",
					"captures": {
						"1": {
							"name": "keyword.other.tatam"
						},
						"2": {
							"name": "entity.name.type.tatam"
						}
					}
				},
				{
					"match": ":\\s*([a-zA-Z][a-zA-Z_0-9]*)",
					"captures": {
						"1": {
							"name": "entity.name.type.tatam"
						}
					}
				},
				{
					"match": "(init|inv|trans|trig)\\s+([a-zA-Z][a-zA-Z_0-9]*)",
					"captures": {
						"1": {
							"name": "keyword.other.tatam"
						},
						"2": {
							"name": "entity.name.function.tatam"
						}
					}
				},
				{
					"name": "constant.numeric.tatam",
					"match": "-?[0-9]+(.[0-9]*)?"
				},
				{
					"match": "\\b(enum|interval|cst|var|let|init|inv|trans|trig|prop|search|solve|initial|sequence|truncated|infinite|finite|complete|maximize|minimize|until)\\b",
					"name": "keyword.other.tatam"
				},
				{
					"name": "entity.name.type.tatam",
					"match": "\\b(Bool|Int|Real)\\b"
				},
				{
					"match": "(<=|>=|<|>|!=|=)",
					"name": "keyword.control.tatam"
				},
				{
					"match": "\\b(not|and|or|implies|if|then|else|elsif|end|forall|exists|sum|prod|min|max|as|default|at|first|current|last)\\b",
					"name": "keyword.control.tatam"
				},
				{
					"name": "entity.name.function.tatam",
					"match": "\\b(X|F|G|U|R|')\\b"
				},
				{
					"name": "constant.numeric.tatam",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "variable.name.tatam",
					"match": "[a-zA-Z][a-zA-Z_0-9]*"
				}
			]
		},
		"strings": {
			"name": "string.quoted.double.tatam",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.tatam",
					"match": "\\\\."
				}
			]
		}
	},
	"scopeName": "source.tatam"
}